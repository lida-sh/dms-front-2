import { defineNuxtPlugin } from '#app'

interface EchoChannel {
  listen: (event: string, callback: (data: any) => void) => EchoChannel
  stopListening: (event: string, callback?: (data: any) => void) => EchoChannel
  subscribed: (callback: () => void) => EchoChannel
}

interface EchoConnector {
  socket: {
    on: (event: string, callback: (data: any) => void) => void
    off: (event: string, callback?: (data: any) => void) => void
    emit: (event: string, data: any) => void
    connected: boolean
    id?: string
  }
}

interface LaravelEcho {
  connector: EchoConnector
  channel: (name: string) => EchoChannel
  privateChannel: (name: string) => EchoChannel
  presenceChannel: (name: string) => EchoChannel
  leave: (name: string) => void
  leaveChannel: (name: string) => void
  socketId: () => string
  disconnect: () => void
}

declare module '#app' {
  interface NuxtApp {
    $echo: LaravelEcho
  }
}

declare module '@vue/runtime-core' {
  interface ComponentCustomProperties {
    $echo: LaravelEcho
  }
}

export default defineNuxtPlugin(async (nuxtApp) => {
  if (process.client) {
    const { default: Echo } = await import('laravel-echo')
    const { default: io } = await import('socket.io-client')

    const echo = new Echo({
      broadcaster: 'socket.io',
      host: 'http://localhost:6001',
      client: io,
      transports: ['websocket', 'polling']
    })

    // تایپ کست به LaravelEcho
    nuxtApp.provide('echo', echo as LaravelEcho)
  }
}
